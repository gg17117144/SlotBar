{"version":3,"sources":["file:///D:/Desktop/cocosProject/SlotBar/assets/slotBar/scripts/mockData/MockData.ts"],"names":["_decorator","Component","ccclass","property","MockData","getMockSymbolData","type","imageUrl","getMockSlotBar","symbolTypes","results","i","randomIndex","Math","floor","random","length","push"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OAEf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;0BAGjBI,Q,WADZF,OAAO,CAAC,gBAAD,C,gBAAR,MACaE,QADb,SAC8BH,SAD9B,CACwC;AACpC;AACwB,eAAjBI,iBAAiB,GAAiB;AACrC,iBAAO,CACH;AACIC,YAAAA,IAAI,EAAE,OADV;AAEIC,YAAAA,QAAQ,EAAE;AAFd,WADG,EAKH;AACID,YAAAA,IAAI,EAAE,QADV;AAEIC,YAAAA,QAAQ,EAAE;AAFd,WALG,EASH;AACID,YAAAA,IAAI,EAAE,QADV;AAEIC,YAAAA,QAAQ,EAAE;AAFd,WATG,EAaH;AACID,YAAAA,IAAI,EAAE,OADV;AAEIC,YAAAA,QAAQ,EAAE;AAFd,WAbG,EAiBH;AACID,YAAAA,IAAI,EAAE,OADV;AAEIC,YAAAA,QAAQ,EAAE;AAFd,WAjBG,CAAP;AAsBH;;AAEoB,eAAdC,cAAc,GAAa;AAC9B,gBAAMC,WAAW,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,OAAvC,CAApB;AACA,gBAAMC,OAAiB,GAAG,EAA1B;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,kBAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,WAAW,CAACO,MAAvC,CAApB;AACAN,YAAAA,OAAO,CAACO,IAAR,CAAaR,WAAW,CAACG,WAAD,CAAxB;AACH;;AACD,iBAAOF,OAAP;AACH;;AApCmC,O","sourcesContent":["import { _decorator, Component } from 'cc';\r\nimport { SymbolData } from '../types/SymbolData';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('getMockSymData')\r\nexport class MockData extends Component {\r\n    // mock 資料函式\r\n    static getMockSymbolData(): SymbolData[] {\r\n        return [\r\n            {\r\n                type: 'apple',\r\n                imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/1/15/Red_Apple.jpg',\r\n            },\r\n            {\r\n                type: 'banana',\r\n                imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/8/8a/Banana-Single.jpg',\r\n            },\r\n            {\r\n                type: 'cherry',\r\n                imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/b/bb/Cherry_Stella444.jpg',\r\n            },\r\n            {\r\n                type: 'grape',\r\n                imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/42/Green_grape_fruit.jpg/640px-Green_grape_fruit.jpg',\r\n            },\r\n            {\r\n                type: 'lemon',\r\n                imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/Citrus_limon_extracted_1.png/640px-Citrus_limon_extracted_1.png',\r\n            },\r\n        ];\r\n    }\r\n\r\n    static getMockSlotBar(): string[] {\r\n        const symbolTypes = ['apple', 'banana', 'cherry', 'grape', 'lemon'];\r\n        const results: string[] = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            const randomIndex = Math.floor(Math.random() * symbolTypes.length);\r\n            results.push(symbolTypes[randomIndex]);\r\n        }\r\n        return results;\r\n    }\r\n}"]}